/* Identification and status */

identAndStatusSection:before, idstatus:before {
	display:block;
	font-weight: bold;
	color: blue;
	content: "Identification and status:";
}

identAndStatusSection, idstatus {
	display:block;
	-oxy-foldable:true;
}

/* dmAddress */
dmAddress > dmIdent > dmCode:before, dmaddres > dmc {
    font-weight:bold;
    content:"Data module code: ";
}
dmAddressItems > issueDate:before, dmlAddressItems > issueDate:before, ddnAddressItems > issueDate:before, dmaddres > issdate:before {
    font-weight:bold;
    content:"Issue date: ";
}

dmAddressItems > issueDate, dmlAddressItems > issueDate, ddnAddressItems > issueDate, dmaddres > issdate {
    display: block;
    content: attr(day) "-" attr(month) "-" attr(year);
}

dmAddressItems > dmTitle, dmaddres > dmtitle {
	display: block;
	text-align: center;
	font-weight: bold;
	font-size: 14pt;
	color: blue;
	padding-top: 6pt;
	padding-bottom: 6pt;
}

/* == Status == */
dmStatus:before, pmStatus:before, ddnStatus:before, dmlStatus:before, status:before {
    content: "Status";
    font-weight: bold;
}

dmStatus, pmStatus, ddnStatus, dmlStatus, status {
	-oxy-foldable:true;
	-oxy-folded:true;
	padding: 6pt;
	border: 1pt solid #666666;
	background-color: #DCF0F8;
}

sourceDmIdent {
    /* TODO */
}
repositorySourceDmIdent {
    /* TODO */
}

/* Security */
security:before {
    content :"► Security information: ";
    color: fuchsia;
    font-weight: bold;
}
security {
    display:block;
    content: "Class:" 
      oxy_combobox(edit, '@securityClassification', editable, false) 
      " " attr(commercialClassification) " " attr(caveat);
}

/* Data restrictions */
/*<dataRestrictions>
    <restrictionInstructions>
        <dataDistribution/>
        <exportControl>
            <exportRegistrationStmt>
                <simplePara/>
            </exportRegistrationStmt>
            <exportRegistrationCode/>
        </exportControl>
        <dataHandling/>
        <dataDestruction/>
        <dataDisclosure/>
        <supersedure/>
    </restrictionInstructions>
    <restrictionInfo>
        <copyright>
            <copyrightPara/>
        </copyright>
        <policyStatement/>
        <dataConds/>
    </restrictionInfo>
</dataRestrictions>
*/
dataRestrictions:first-of-type:before, datarest:first-of-type:before {
    display:block;
    font-weight: bold;
    color: fuchsia;
    content: "► Data restrictions";
}
dataRestrictions, datarest {
    display:block;
}
dataRestrictions > *, datarest > * {
    padding-left: 12pt;
}

restrictionInstructions:before, instruct:before {
    display:block;
    font-weight: bold;
    color: fuchsia;
    content: "■ Restriction instructions";  
}
restrictionInstructions > *, instruct > * {
    padding-left: 12pt;
}
dataDistribution:before, distrib:before {
    content: "○ Data distribution";
    display:block;
    color: fuchsia;
}
exportControl:before, expcont:before {
    content: "○ Export control";
    display:block;
    color: fuchsia;
}
exportControl, expcont {
    display:block;
}
dataHandling:before {
    content: "○ Data handling";
    display:block;
    color: fuchsia;
}
dataHandling {
    display:block;
 }
dataDestruction:before {
    content: "○ Data destruction";
    display:block;
    color: fuchsia;
}
dataDestruction {
    display:block;
 }
dataDisclosure:before {
    content: "○ Data disclosure";
    display:block;
    color: fuchsia;
}
dataDisclosure {
    display:block;
 }
supersedure:before {
    content: "○ Supersedure";
    display:block;
    color: fuchsia;
}
supersedure {
    display:block;
}
restrictionInfo:before {
    display:block;
    font-weight: bold;
    color: fuchsia;
    content: "■ Restriction information";
}
restrictionInfo > * {
    padding-left: 12pt;
}
/* Copyright information */
copyright:before {
    display:block;
    font-weight: bold;
    color: fuchsia;
    content: "○ Copyright information";
}
copyright {
    display:block;
}

policyStatement:before {
    font-weight: bold;
    color: fuchsia;
    content: "○ Policy statement: ";
}
policyStatement {
    display: block;
}
dataConds:before, datacond:before {
    font-weight: bold;
    color: fuchsia;
    content: "○ Data conditions: ";
}
dataConds, datacond {
    display: block;
}



/* Logo */
logo:before {
    display:block;
    font-weight: bold;
    color: fuchsia;
    content: "► Logo";
}
logo {
    display: block;
}

logo > symbol {
    content: oxy_url(oxy_unparsed-entity-uri(attr(infoEntityIdent))); /*oxy_url(oxy_xpath('unparsed-entity-uri(@infoEntityIdent)'));*/
}

/* RPC & originator */
dmStatus > responsiblePartnerCompany:before, status > rpc:before {
    content :"► Responsible partner company: ";
    color: fuchsia;
    font-weight: bold;
}

originator:before, orig:before {
    content :"► Originator: ";
    color: fuchsia;
    font-weight: bold;
}

responsiblePartnerCompany, originator, rpc, orig {
    display:block;
    -oxy-prepend-content: attr(enterpriseCode) " - ";
}

/* Applic cross ref table reference*/
applicCrossRefTableRef:before {
    content :"► Applicability cross reference table: ";
    color: fuchsia;
    font-weight: bold;
}
applicCrossRefTableRef {
    display:block;
}

/* Applic of the DM or PM */
pmStatus > applic:before, dmStatus > applic:before, status > applic:before {
    content :"► Applicability: ";
    color: fuchsia;
    font-weight: bold;
}
pmStatus > applic, dmStatus > applic, status > applic {
    display:block;
}
pmStatus > applicRef:before, dmStatus > applicRef:before {
    content :"► Applicability ref: ";
    color: fuchsia;
    font-weight: bold;
}
pmStatus > applicRef, dmStatus > applicRef {
    content: attr(applicIdentValue);
    display:block;
}

/* Technical standard*/
dmStatus > techStandard:before {
    content :"► Technical standard: ";
    color: fuchsia;
    font-weight: bold;
}
dmStatus > techStandard {
    display:block;
}


/* Brex reference */
pmStatus > brexDmRef:before, dmStatus > brexDmRef:before, status > brexref:before {
    content :"► Business rules reference: ";
    color: fuchsia;
    font-weight: bold;
}

brexDmRef, brexref {
    display:block;
}

/* QA  */
pmStatus > qualityAssurance:before, dmStatus > qualityAssurance:before, status > qa {
    content :"► QA: ";
    color: fuchsia;
    font-weight: bold;
}
qualityAssurance, qa {
    display:block;
}
qualityAssurance > unverified, qa > unverified {
    content: "UNVERIFIED";
    display: block;
    font-weight: bold;
    color: red;
}
qualityAssurance > firstVerification {
    content: "First verification: " oxy_combobox( 
            edit, '@verificationType',
            editable, false);
    display: block;
}
qa > firstver {
    content: "First verification: " oxy_combobox( 
            edit, '@type',
            editable, false);
    display: block;
}
qualityAssurance > secondVerification {
    content: "Second verification: " oxy_combobox( 
            edit, '@verificationType',
            editable, false);
    display: block;
}
qa > secver {
    content: "Second verification: " oxy_combobox( 
            edit, '@type',
            editable, false);
    display: block;
}
/* */
systemBreakdownCode:before {
    content: "► System breakdown code";
    color: fuchsia !important;
    font-weight: bold !important;
    display:block !important;
}
functionalItemCode:before {
    content: "► Functional item code";
    color: fuchsia !important;
    font-weight: bold !important;
    display:block !important;
}
functionalItemRef:before {
    content: "► Functional item ref";
    color: fuchsia !important;
    font-weight: bold !important;
    display:block !important;
}

systemBreakdownCode, functionalItemCode, functionalItemRef {
    /*display:block; */
}

/* Skills */

skillLevel:before {
    content: "► Skills";
    color: fuchsia !important;
    font-weight: bold !important;
    display:block !important;
}
skillLevel {
    display:block; 
}


/* RFU */
reasonForUpdate:first-of-type:before, rfu:first-of-type:before {
    -oxy-prepend-content : "► Reason(s) for update(s): ";
    color: fuchsia !important;
    font-weight: bold !important;
    display:block !important;
}

reasonForUpdate > simplePara:first-child:before, rfu > p:first-child:before {
    -oxy-prepend-content: oxy_concat("Update ", oxy_xpath("../@id"), " / ", oxy_xpath("../@updateReasonType"));
    display:block;
    font-weight:bold;
    color:black;
}

reasonForUpdate, rfu {
    display:block;
    font-weight:normal!important;
}

/*
reasonForUpdate:before {
    -oxy-append-content:attr(id);
    display:table-cell;
    width:150pt;
    border: 1pt solid black;
}
reasonForUpdate:before {
    -oxy-append-content:attr(updateReasonType);
    display:table-cell;
    width:200pt;
    border: 1pt solid black;
}
reasonForUpdate {
    display:table-row;
}
*/

productSafety {
    
}

/* remarks */
remarks {
    
}

